1. Привітання
	- продовжимо тему тестування

2. Протрактор - це фреймворк для наскрізного тестування Ангулар і Ангулар ДжС додатків.
		(хоча його можна також використовувати поза рамками фреймворку)

	2.1 Протрактор тестує Ангулар\АнгулаДжс додаток (апку\аплікацію), виконуючи сценарії е2е специфікацій у реальному середовищі
	    у бравзері, імітуючи поведінку реального користувача.

    Примітка:  Фреймворк Протрактор заточений під додатки Енгулар, він може просочуватись у життєвий цикл аппки і це дозволяє йому відстежувати
	стан, і відповідним чином реагувати. Наприклад не потрібно явно викликати паузу бравзера з певним таймаутом, під час очікування якого припускається,
	що сторінка завантажилась і виконались усі асинхронні операції. Тобто програма, яку ми тестуватимемо, готова для використання.
	Детальніше про це згодом.
               
3. Як ця система працює?

	3.1 Протрактор - це програма на Node.js
	3.2 Яка є обгорткою над WebDriverJS
	3.3 Який в свою чергу дозволяє комунікувати з WebDriver APIs бравзера, відправляючи команди через проксі Selenium Server, при
	    використанні Selenium фреймворку, або ж без нього - напряму. (стало можливим коли??)

  Примітка: Одже достатньо виконати команду в консолі npm install protractor, і ви зможете отримати майже готове середовище для наскрізного
    тестування, це за умови що Ви не використовуєте Ангулар і Ангулар ДжС додатків, оскільки вони надають це рішення вже вбудоване у свою
    систему. Чому "майже готове"? 

4. Фактично для своєї роботи Протрактор потребує два ключові файли
	а) файл конфігурації - який потрібно буде налаштувати відповідно до задач
		
	б) файл тестів або специфікації - код якої\якого, власне, і імітуватиме поведінку реального користувача.

  Примітка: оскільки в нас на даний момент ще не має коирсного файлу специфікації, у випадку використання команд Ангулар CLI, він не несе 
  в собі корисних блоків для тестування, або ж й взагалі відсутній у випадку використання поза екосистемою Ангулар, і також у цьому випадку
  конфігурувати середовище виконання е2е тестів буде потрібно вручну.

5. З ключових моментів конфігурації варто відмітити декілька пунктів, не заглиблюючись в кожен з них, оскільки цю інформацію завжди можна
    знайти у документації Протрактор:
	- directConnect: true - без використання Селеніум сервера, прямий звязок з інстансом бравзера

	- capabilities: {
  		'browserName': 'chrome',
  		'chromeOptions': {
    		'args': ['show-fps-counter=true'] - дозволяє обрати потрібний браузер для тестування, протрактор завжди підтримоє 2 останні активні
  		}                                     версії  Chrome, Firefox, Safari, and IE
		},
	- multiCapabilities: [{
  		'browserName': 'firefox'
		}, {				- масив бравзерів
  		'browserName': 'chrome'
		}]
	- "--headless" мод для Хром
	- framework: 'jasmine', + конфіги для обраного фреймворку з коробки 2 БДД Жасмін і МОча, по дефолту Жасмін
	- onPrepare фу-я або файл, який виконається, перед запуском тестів, дозволяє виконати підготовку для старту ресайз віндов або логін як приклад

6. Тестовий файл, файл специфікації:
	- синтаксис протрактор і жасмін
	- блок діскрайб - тест-сют
	- іт - конкретно тест
	- експект - синтаксис жасмін


    Примітка: 

















